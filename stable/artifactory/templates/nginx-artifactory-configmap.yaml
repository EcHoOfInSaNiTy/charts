{{- if not .Values.nginx.customArtifactoryConfigMap -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "artifactory.fullname" . }}-artifactory-config
  labels:
    app: {{ template "artifactory.name" . }}
    chart: {{ template "artifactory.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
  artifactory.conf: |
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
  {{- if .Values.nginx.tlsSecretName }}
    ssl_certificate      /etc/nginx/ssl/tls.crt;
    ssl_certificate_key  /etc/nginx/ssl/tls.key;
  {{- else }}
    ssl_certificate      /etc/nginx/ssl/example.crt;
    ssl_certificate_key  /etc/nginx/ssl/example.key;
  {{- end }}
    ssl_session_cache shared:SSL:1m;
    ssl_prefer_server_ciphers   on;
    ## server configuration
    server {
      listen 443 ssl;
      listen 80 ;
      server_name ~(?<repo>.+)\.artifactory artifactory;

      if ($http_x_forwarded_proto = '') {
        set $http_x_forwarded_proto  $scheme;
      }
    ## Application specific logs
    ## access_log /var/log/nginx/artifactory-access.log timing;
    ## error_log /var/log/nginx/artifactory-error.log;
      rewrite ^/$ /artifactory/webapp/ redirect;
      rewrite ^/artifactory/?(/webapp)?$ /artifactory/webapp/ redirect;
      rewrite ^/(v1|v2)/(.*) /artifactory/api/docker/$repo/$1/$2;
      chunked_transfer_encoding on;
      client_max_body_size 0;
      location /artifactory/ {
        proxy_read_timeout  900;
        proxy_pass_header   Server;
        proxy_cookie_path   ~*^/.* /;
        if ( $request_uri ~ ^/artifactory/(.*)$ ) {
          proxy_pass          http://{{ include "artifactory.fullname" . }}:{{ .Values.artifactory.internalPort }}/artifactory/$1;
        }
        proxy_pass          http://{{ include "artifactory.fullname" . }}:{{ .Values.artifactory.internalPort }}/artifactory/;
        proxy_set_header    X-Artifactory-Override-Base-Url $http_x_forwarded_proto://$host:$server_port/artifactory;
        proxy_set_header    X-Forwarded-Port  $server_port;
        proxy_set_header    X-Forwarded-Proto $http_x_forwarded_proto;
        proxy_set_header    Host              $http_host;
        proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
      }
    }

{{- end -}}